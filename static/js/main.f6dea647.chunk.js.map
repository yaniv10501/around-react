{"version":3,"sources":["images/header-logo.svg","components/Header.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Card","card","name","link","likes","onCardClick","onClick","type","aria-label","length","Main","isLoading","user","userName","userAvatar","userDescription","cards","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","style","backgroundImage","id","map","_id","Footer","PopupWithForm","formName","formTitle","submitTitle","isOpen","onClose","children","noValidate","ImagePopup","selectedCard","api","baseUrl","authorization","this","_baseUrl","_authorization","res","ok","json","Promise","reject","status","fetch","headers","then","_checkRes","about","method","body","JSON","stringify","url","avatar","App","useState","setSelectedCard","isEditInfoPopupOpen","setIsEditIntoPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","closeAllPopups","setIsLoading","setCards","userInfo","setUserInfo","useEffect","all","getUserInfo","getIntialCard","values","catch","err","console","log","placeholder","minLength","maxLength","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6dea647.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.4e8e0a1d.svg\";","import logo from '../images/header-logo.svg';\n\nexport default function Header() {\n\n  return (\n    <header className=\"header\">\n\n      <img className=\"header__logo\" src={logo} alt=\"Header logo\" />\n\n    </header>\n  )\n\n}\n","export default function Card({\n  card: { name, link, likes },\n  onCardClick\n}) {\n\n  const handleClick = () => {\n\n    onCardClick(name, link)\n\n  }\n\n  return (\n    <li className=\"photo\">\n\n      <img\n        className=\"photo__image\"\n        alt={name}\n        src={link}\n        onClick={handleClick}\n      />\n\n      <button className=\"photo__delete\" type=\"button\" aria-label=\"Delete\" />\n\n      <div className=\"photo__info\">\n\n        <h2 className=\"photo__title\">{name}</h2>\n\n        <div className=\"photo__like-container\">\n\n          <button className=\"photo__like\" type=\"button\" aria-label=\"Like\" />\n\n          <p className=\"photo__like-count\">{likes.length}</p>\n\n        </div>\n\n      </div>\n\n    </li>\n  )\n\n}\n","import Card from './Card.js';\n\nexport default function Main({\n  isLoading,\n  user: {\n    userName,\n    userAvatar,\n    userDescription\n  },\n  cards,\n  onEditProfileClick,\n  onAddPlaceClick,\n  onEditAvatarClick,\n  onCardClick\n}) {\n\n  return (\n    <main className=\"container\">\n\n      <div className={isLoading ? \"spinner\" : \"spinner spinner_hidden\"}><i></i></div>\n\n      <div className={isLoading ? \"content content_hidden\" : \"content\"}>\n\n        <section className=\"profile\">\n\n          <div\n            className=\"profile__edit-pic\"\n            onClick={onEditAvatarClick}\n          >\n\n            <div\n              className=\"profile__pic\"\n              style={{ backgroundImage: `url(${userAvatar})` }}\n            />\n\n          </div>\n\n          <div className=\"profile__info\">\n\n            <h1 className=\"profile__name\" id=\"name\">{userName}</h1>\n\n            <p className=\"profile__description\" id=\"job\">{userDescription}</p>\n\n            <button\n              className=\"profile__edit-button\"\n              type=\"button\"\n              aria-label=\"Edit profile\"\n              onClick={onEditProfileClick}\n            />\n\n          </div>\n\n          <button\n            className=\"profile__add-button\"\n            type=\"button\"\n            aria-label=\"Add a picture\"\n            onClick={onAddPlaceClick}\n          />\n\n        </section>\n\n        <section className=\"photos\">\n\n          <ul className=\"photos__grid\">\n\n            {cards.map((card) => (\n              <Card card={card} key={card._id} onCardClick={onCardClick} />\n            ))}\n\n          </ul>\n\n        </section>\n\n      </div>\n\n    </main>\n  )\n\n}\n","export default function Footer() {\n\n  return (\n    <footer className=\"footer\">\n\n      <p className=\"footer__copyright\">&copy; 2021 Around the U.S. Yaniv Schweitzer</p>\n\n    </footer>\n  )\n\n}\n","export default function PopupWithForm({\n  name,\n  formName,\n  formTitle,\n  submitTitle,\n  isOpen,\n  onClose,\n  children\n}) {\n\n  return (\n    <div\n      className={\n        isOpen\n          ? `popup popup_type_${name} popup_opened`\n          : `popup popup_type_${name}`\n      }>\n\n      <div className=\"popup__container\">\n\n        <form className=\"popup__form\" name={formName} noValidate _id=\"\">\n\n          <h2 className=\"popup__title\">{formTitle}</h2>\n\n          {children}\n\n          <button className=\"popup__save-button\" type=\"submit\">{submitTitle}</button>\n\n        </form>\n\n        <button\n          className=\"popup__close-button\"\n          type=\"button\"\n          aria-label=\"Close\"\n          onClick={onClose}\n        />\n\n      </div>\n\n    </div>\n  )\n\n}\n","export default function ImagePopup({\n  selectedCard: { name, link },\n  isOpen,\n  onClose\n}) {\n\n  return (\n    <div\n      className={\n        isOpen\n          ? \"popup popup_type_image popup_opened\"\n          : \"popup popup_type_image\"\n      }>\n\n      <div className=\"popup__container popup__container_type_image\">\n\n        <img className=\"popup__image\" src={link} alt={name} />\n\n        <h2 className=\"popup__image-title\">{name}</h2>\n\n        <button\n          className=\"popup__close-button\"\n          type=\"button\"\n          aria-label=\"Close\"\n          onClick={onClose}\n        />\n\n      </div>\n\n    </div>\n  )\n\n}\n","/** @module Api */\n\n/**\n * @class\n * @classdesc Make requests to the website API with the class methods\n * @constructor\n * @param {object} - An object with the base URL of the API and the authorization key\n * @param {string} - The base URL of the API\n * @param {string} - The authorization key for the API\n */\n\nclass Api {\n\n  constructor({ baseUrl, authorization }) {\n    this._baseUrl = baseUrl;\n    this._authorization = authorization;\n  }\n\n  /**\n   * @method _checkRes\n   * @description A private method to check if the result is ok or with an error\n   * @param {object} res - The result from the API\n   * @returns Converting the result to JSON or rejecting the promise with the error status code\n   * @private\n   */\n\n  _checkRes(res) {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  }\n\n  /**\n   * @method getUserInfo\n   * @description A public method to get the user info from the API\n   * @returns The result from the API\n   * @public\n   */\n\n  getUserInfo() {\n\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    })\n      .then(res => this._checkRes(res))\n  }\n\n  /**\n   * @method getIntialCard\n   * @description A public method to get the intial cards from the API\n   * @returns The result from the API\n   * @public\n   */\n\n  getIntialCard() {\n\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    })\n      .then(res => this._checkRes(res))\n  }\n\n  /**\n   * @method setUserInfo\n   * @description A public method to set the user info in the API\n   * @param {object} - An object with the name and about info for the user\n   * @param {string} name - The user name\n   * @param {string} about - The user about info\n   * @returns The result from the API\n   * @public\n   */\n\n  setUserinfo({ name, about }) {\n\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n      .then(res => this._checkRes(res))\n\n  }\n\n  /**\n   * @method setUserPicture\n   * @description A public method to set a new user picture in the API\n   * @param {string} url - The url for the user picture\n   * @returns The result from the API\n   * @public\n   */\n\n  setUserPicture(url) {\n\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: url\n      })\n    })\n      .then(res => this._checkRes(res))\n\n  }\n\n  /**\n   * @method addCard\n   * @description A public method to add a new image card to the API\n   * @param {object} - An object with the name and link for the image card\n   * @param {string} name - The title for the image card\n   * @param {string} link - The url for the image\n   * @returns The result from the API\n   * @public\n   */\n\n  addCard({ name, link }) {\n\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: this._authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then(res => this._checkRes(res))\n\n  }\n\n  /**\n   * @method deleteCard\n   * @description A public method to delete a card from the API\n   * @param {string} _id - The id of the card\n   * @returns The result from the API\n   * @public\n   */\n\n  deleteCard(_id) {\n\n    return fetch(`${this._baseUrl}/cards/${_id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    })\n      .then(res => this._checkRes(res))\n\n  }\n\n  /**\n   * @method addLike\n   * @description A public method to add a card like in the API\n   * @param {string} _id - The id of the card\n   * @returns The result from the API\n   * @public\n   */\n\n  addLike(_id) {\n\n    return fetch(`${this._baseUrl}/cards/likes/${_id}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization\n      }\n    })\n      .then(res => this._checkRes(res))\n\n  }\n\n  /**\n   * @method removeLike\n   * @description A public method to remove a card like from the API\n   * @param {string} _id - The id of the card\n   * @returns The result from the API\n   * @public\n   */\n\n  removeLike(_id) {\n\n    return fetch(`${this._baseUrl}/cards/likes/${_id}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    })\n      .then(res => this._checkRes(res))\n\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  authorization: \"12be1991-4f28-449f-a9a9-71d4704b25a2\"\n})\n\nexport { api };\n","import '../App.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport { useEffect, useState } from 'react';\nimport { api } from '../utils/api.js';\n\nfunction App() {\n\n  const [selectedCard, setSelectedCard] = useState({\n    name: '',\n    link: ''\n  });\n\n  const [isEditInfoPopupOpen, setIsEditIntoPopupOpen] = useState(false);\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditIntoPopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = (name, link) => {\n    setSelectedCard({\n      name: name,\n      link: link\n    });\n    setIsImagePopupOpen(true);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditIntoPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n  };\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [cards, setCards] = useState([]);\n\n  const [userInfo, setUserInfo] = useState({\n    userName: '',\n    userDescription: '',\n    userAvatar: '',\n  });\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getIntialCard()])\n      .then(values => {\n        setUserInfo({\n          userName: values[0].name,\n          userDescription: values[0].about,\n          userAvatar: values[0].avatar,\n        });\n        setCards(values[1]);\n      })\n      .then(() => setIsLoading(false))\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      <Header />\n\n      <Main\n        isLoading={isLoading}\n        user={userInfo}\n        cards={cards}\n        onEditProfileClick={handleEditProfileClick}\n        onAddPlaceClick={handleAddPlaceClick}\n        onEditAvatarClick={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n      />\n\n      <Footer />\n\n      <PopupWithForm\n        name=\"edit-info\"\n        formName=\"editInfo\"\n        formTitle=\"Edit profile\"\n        submitTitle=\"Save\"\n        isOpen={isEditInfoPopupOpen}\n        onClose={closeAllPopups}\n      >\n        <input\n          className=\"popup__input popup__input_type_name\"\n          id=\"name-input\"\n          type=\"text\"\n          placeholder=\"name\"\n          name=\"name\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          required\n        />\n\n        <span className=\"popup__error name-input-error\" />\n\n        <input\n          className=\"popup__input popup__input_type_about\"\n          id=\"about-input\"\n          type=\"text\"\n          placeholder=\"about me\"\n          name=\"job\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          required\n        />\n\n        <span className=\"popup__error about-input-error\" />\n\n      </PopupWithForm>\n\n      <PopupWithForm\n        name=\"edit-picture\"\n        formName=\"editPicture\"\n        formTitle=\"Change profile picture\"\n        submitTitle=\"Save\"\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n      >\n\n        <input\n          className=\"popup__input popup__input_type_profile-picture\"\n          id=\"profile-picture-input\"\n          placeholder=\"profile picture url\"\n          name=\"picture\"\n          type=\"url\"\n          required\n        />\n\n        <span className=\"popup__error profile-picture-input-error\" />\n\n      </PopupWithForm>\n\n      <PopupWithForm\n        name=\"add\"\n        formName=\"add\"\n        formTitle=\"New Place\"\n        submitTitle=\"Create\"\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n      >\n\n        <input\n          className=\"popup__input popup__input_type_title\"\n          id=\"title-input\"\n          type=\"text\"\n          placeholder=\"Title\"\n          name=\"title\"\n          minLength=\"2\"\n          maxLength=\"30\"\n          required\n        />\n\n        <span className=\"popup__error  title-input-error\" />\n\n        <input\n          className=\"popup__input popup__input_type_url\"\n          id=\"url-input\"\n          type=\"url\"\n          placeholder=\"Image URL\"\n          name=\"url\"\n          required\n        />\n\n        <span className=\"popup__error url-input-error\" />\n\n      </PopupWithForm>\n\n      <PopupWithForm\n        name=\"delete\"\n        formName=\"delete\"\n        formTitle=\"Are you sure?\"\n        submitTitle=\"Yes\"\n      />\n\n      <ImagePopup\n        isOpen={isImagePopupOpen}\n        selectedCard={selectedCard}\n        onClose={closeAllPopups}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}